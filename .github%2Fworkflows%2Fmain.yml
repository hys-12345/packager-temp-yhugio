name: Cordova Build

on:
  workflow_dispatch:
      
permissions:
  # required to modify releases
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # Set up Android SDK and Build Tools
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'

      # Install Android Build Tools
      - name: Install Android Build Tools
        run: |
          sdkmanager "build-tools;30.0.3" "platform-tools" "platforms;android-33"
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}

      # Add Build Tools to PATH (fixes apksigner command not found)
      - name: Add Build Tools to PATH
        run: echo "$ANDROID_HOME/build-tools/30.0.3" >> $GITHUB_PATH

      # Set up Gradle
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '7.6.5' # Specify a stable Gradle version compatible with Android builds

      # Setup signing files (keystore and pass.txt already in repo)
      - name: Setup signing files
        run: |
          chmod 600 0.2Studio.keystore # 安全权限

      # Install Cordova globally
      - name: Install Cordova
        run: npm install -g cordova
        
      # Find and unzip the project's zip file
      - name: Unzip project
        run: |
          ZIP_FILE=$(find . -maxdepth 1 -name "*.zip" -type f)
          if [ -z "$ZIP_FILE" ]; then
            echo "No zip file found"
            exit 1
          fi
          unzip "$ZIP_FILE" -d project
          rm "$ZIP_FILE"

      # Navigate to unzipped project directory and run npm install
      - name: Install dependencies
        run: |
          cd project
          npm install

      # Run npm build (assumes this runs cordova build android --debug)
      - name: Build project
        run: |
          cd project
          npm run build
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}

      # Copy APK
      - name: Copy APK
        run: cp ./project/platforms/android/app/build/outputs/apk/debug/app-debug.apk app-debug.apk

      # Sign APK
      - name: Sign APK
        run: |
          apksigner sign --v1-signing-enabled true --v2-signing-enabled true --v3-signing-enabled true \
            --ks 0.2Studio.keystore --ks-key-alias 0.2Studio \
            --ks-pass pass:0.2Studio --key-pass pass:0.2Studio \
            --out app-signed.apk app-debug.apk    
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}

      - name: Verify signature
        run: apksigner verify --verbose --print-certs app-signed.apk
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}

      # Upload artifacts to tag
      - name: Upload artifacts to tag
        uses: xresloader/upload-to-github-release@2bcae85344d41e21f7fc4c47fa2ed68223afdb49
        with:
          file: ./app-signed.apk
          draft: false
          tag_name: "deep-sea-build"
